{
  "openai_call": {
    "prompt": "- self.openai_call(prompt, ?temperature=0.4, ?max_tokens=200) -> str: runs an arbitrary LLM completion to OpenAI GPT-3.5 model...",
    "enabled": true
  },
  "execution_agent": {
    "prompt": "- self.execution_agent(task:str) -> str; I must use this if I need to run arbitrary code...",
    "enabled": true
  },
  "count_tokens": {
    "prompt": "- self.count_tokens(text:str) -> int; to count the ammount of tokens of a given string...",
    "enabled": true
  },
  "process_large_text": {
    "prompt": "- self.process_large_text(text:str, instruction:str, ?max_output_length=1000:int, ?split_text=None:function)->str...",
    "enabled": false
  },
  "get_serp_query": {
    "prompt": "- self.get_serp_query_result(query: str, n: int) -> list of lists on format [['snippet', 'link'], ['snippet', 'link']]...",
    "enabled": true
  },
  "memory_agent": {
    "prompt": "- self.memory_agent(caller:str, content:str, goal:goal) - str or True if there's no return string. This agent can handle memory I/O...",
    "enabled": true
  },
  "bard_api_call": {
    "prompt": "- self.bard_api_call(prompt:str, ?role='assistant':str) -> str: runs an arbitrary LLM completion to the Google Bard model...",
    "enabled": true
  }
}
